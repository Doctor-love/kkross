import excemptions
import yaml


# -------------------------------------------------------------------------------------------------
class Exploit():
    '''Exploit base class'''

    def check_structure(data):
        '''Checks if exploit YAML file contains required data. Raises excemption'''
        
        if not 'structure_version' in data:
            raise ParseError('Structure version not specified in YAML file "%s"' % yaml_file)
    
        if data['structure_version'] > 1:
            raise ParseError('Structure version "%s" is not supported' % data['structure_version'])
    
        if not 'data' in data:
            raise ParseError('"data" section not included in YAML structure')
    
        return

    # ---------------------------------------------------------------------------------------------
    def __init__(data):
        self.check_structure(data)

        data = data['data']

            





# -------------------------------------------------------------------------------------------------
def check_structure(data):
    '''Checks if exploit YAML file contains required data. Returns True or raises excemption'''
    
    if not 'structure_version' in data:
        raise ParseError('Structure version not specified in YAML file "%s"' % yaml_file)

    if data['structure_version'] > 1:
        raise ParseError('Structure version "%s" is not supported' % data['structure_version'])

    if not 'data' in data:
        raise ParseError('"data" section not included in YAML structure')

    return True


# -------------------------------------------------------------------------------------------------
def load_exploit(yaml_file):
    '''Loads and parses YAML file. Returns exploit object'''

    data = yaml.load(open(yaml_file))
    check_structure(data)

    return 

    
